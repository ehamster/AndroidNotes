ListView
  完成一个长列表不能用Dynamic list 因为他是把每一个xml转化为view，很费时间，所以使用ListView
  动态列表在内存上不好，所以使用ListView
  converting Layout file into view is a waste of time
  1.MainLayout添加一个ListView作为容器
  2.create Adapter extends BaseAdapter
Adapter  (Convert data to view)  1.xml文件转化为view，2.填坑
  is like a converter that convert a list of data into a list of views
  需要用到context。 因为当你想将layout文件转化为view对象时，需要获取布局大小颜色等等属性。
  这些属性就是从context获得
  所以：在Activity里面可以直接调用getLayoutInflater()方法，因为Activity是一个context
  如果不在Activity里面的话，需要context.getLayoutInflater();
  
  ListView不知道内容，所以需要Adapter
  1.什么数据，2.多少数据3.每一个layout的样子
  1.Add ListView in Layout
  2.Create class called MyAdapter extends BaseAdapter
  3.in MainActivity,write setupUI method to create a new TodoListAdatper and pass it to ListView
  只显示屏幕上的数据，相当于只是调用了几次getView ，所以节省时间（This way called lazy load）
  但是默认没有节省空间，需要开发者注意：
  使用convertView,节省空间，但是流畅性还不好。
  ((TextView) convertView.findViewById(R.id.main_list_item_text)).setText(todo.text);
  
 这一句话浪费时间，因为是递归寻找位置。
 所以使用viewHolder保存找到的位置，不需要每次都去寻找位置。
  ListView magic (use convertView in getView method)
  use ViewHolder
Why ListView is fast?
 
public View getView(int position, View convertView, ViewGroup parent) {
        ViewHolder vh;
        if (convertView == null) {
            convertView = LayoutInflater.from(context).inflate(R.layout.main_list_item,parent,false);
            vh = new ViewHolder();
            vh.tv = (TextView) convertView.findViewById(R.id.main_list_item_text);
            convertView.setTag(vh);
        }
        else {
            vh = (ViewHolder) convertView.getTag();
        }


        Todo todo = list.get(position);
        vh.tv.setText(todo.text);
        return convertView;
    }

ListView正确使用方式：
注意：使用ConvertView 减少空间内存需求，使用ViewHolder关于滑动流畅性
