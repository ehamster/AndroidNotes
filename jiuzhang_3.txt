ContentDescription: 帮助盲人阅读
Dynamic ListUI
  -1.create new file layout.xml 放入需要重复的 view
  -2.mainactivity create new container 
  <LinearLayout
  orientation = vertical
  id = education_item
  
  />
  -3.把每一个第一步的东西转成一个view放入容器中
    -1.LinearLayout container = findViewBiId(R.id.education_item);
    -2.for(Education : educations){
      View view = getEducationView(education);
      educationContainer.addView(view);//一个view表示一个education对象
      }
    private View getEducationView(Education education){
      View view = getLayoutInflayer().inflate(R.layout.education_item,null)//layout转化为一个树（把xml转化为view）
      填坑
     ((TextView) view.findViewById(R.id.education_school)).setText(education.school);
      return view
    }//null 是layout父亲，限定孩子大小
    可以说getLayoutInflater().inflater() 是用来找 res/layout下的 xml 布局文件，并且实例化；findViewById() 是找具体 xml 布局文件中的具体 widget 控件
    表单界面Form UI
      -.back button and menu item //表明是次级activity
      -1.create activity_layout file
      -2.create activity_java
      -3.在mainufest文件里声明一下
      -4.
      
      返回按钮：
      1.  在oncreate里面添加
      getsupportactionbar().setdisplayHomeasupEnable(true);//显示返回在actionbar里面
      2. override onOptionItemSelected方法
      public boolean onOptionsItemSelected(MenuItem item){
          if(item.getItemid() == android.R.id.home){ //if item's id is the id of return button
          finish(); //finish cuttenr activity
          return true;
         }
          return super.onOptionsItemSelected(item);
        }
      done按钮：
      1.create menu directory
      2.create menu resource file
      3.<item
        android:id="@+id/save"
        android:icon="@drawable/ic_done_white_24dp"
        app:showAsAction="always"
        android:title="@string/action_save"/>
      4.override onCreateOptionMenu
      public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.menu_education_edit,menu);
        return super.onCreateOptionsMenu(menu);
    }//显示出对号
    日期选择器 date picker
Data Flow between Activitys//activity之间传递数据
  -1.override onActivityResult(int requestCode, int resultCode, Intent data) method 
  // 在主调activity重写这个方法用来接收被调activity传回来的数据,保存在data里
  2.主调activity设置OnClickListener， 使用 startActivityForResult(intent,requestCode) //requestCode用来判断是哪一个按钮发送的请求
  3.被调activity中
  通过findViewById拿到界面信息到对象里，然后将对象传回去！
  //可以用静态全局变量传递，但是封装性得不到实现，所以极端不好！
  //所以请使用intent来实现
   Intent resultIntent = new Intent();
        resultIntent.putExtra(KEY_EDUCATION,tem_education);//key-value looks like hashMap
        //serialize,deserialize因为
      putExtra不支持传对象，所以需要将对象serilize成为char[]
      所以对象的类需要implement Parcelable（Android class）
      setResult(Activity.RESULT_OK,resultIntent);
   4.修改implement 了Parcelable接口的类里面override的方法，检查是否需要自己修改serialize,deserialize部分，注意解码和还原的变量的顺序
   5.主调函数
   protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        if(requestCode == REQ_CODE_EDUCATION_EDIT && resultCode == Activity.RESULT_OK){
            Education result = data.getParcelableExtra(KEY_EDUCATION);
        }
    }
    保存数据到本地
    1.Shared Preferences //key-value
    2.Internal /external storage //java read and write
    3.SQLite database
    4.Cloud
    
    1.sharedPreferences (基本类型直接传递，对象需使用Gson转化为Json对象再传递)
      1.create a sharedPreference: SharedPreferences sp = context.getSharedPreferences(NAME,Context.MODE_PRIVATE);
      //context is father of activity
    2. SharedPreferences.Editor editor = sp.edit();
    editor.putString("key", "aaa"); //key-value
    editor.putInt("int",10); 
    editor.apply();
    //read
    SharedPreferences sp = context.getSharedPreferences(NAME,Context.MODE_PRIVATE);
    String value = sp.getString("key",""); //第一个参数不存在的时候返回第二个参数
    int intValue = sp.getInt("int",0);
    where is SharedPreferences
    写到文件里，data/com...../shared_prefs/
    
    如何把对象存在SharedPreference里面，通过序列化
    List<Education> educations = new ArrayList<>();
     editor.putString("education", convertEducationListToString(educations));
     用GSON，convert java Objects into JSON representation
     And convert Json representation into object
{
  "name": "JING GUO",//Json
  "age": 18,
}
How to use Gson
  1.In build.gradle(Module app) add compile 'com.google.code.gson:2.7'
  2.click sync now
  3.Gson gson = new Gson();
  4.String jsonString = gson.toJson(object);
  把Json转化为对象
  1.Type type = new TypeToken<project>(){}.getType();
  2.Project projectFromJson = gson.fromJson(jsonString,type);
  
  
  Debug
